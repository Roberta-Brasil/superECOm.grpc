syntax = "proto3";// specifies the kind of syntax, I am using the version 3 of protocol buffers.

option java_package = "ds.Service2";// specifies the java package it can be modified.
option java_multiple_files = true;// specifies the way the files are organised by the library, it is fixed.
option java_outer_classname = "Service2Impl";// specifies the Class Name, I enter the service name + IMPL, which means implementation. It can be modified.

//Creating a GRPC service which is called searchingByPeriod

service service2{

	//indicating the method with the term rpc, the method and type of message that is sending and receiving

	rpc requestPeriod(stream periodRequested) returns(identifyPeriod){}//Client Streaming
    rpc enterNaturalResourcetype(resourceType) returns(registrationTypeResponse){}//Unary
    rpc returnAirQualitybyPeriod(identifyPeriod) returns(stream reportAirWaterQuality){}//Server Streaming

}

  //Client streaming - specify what my message is called, which type its contains and assigning its values.

 message periodRequested{

 //it is the type that are in our message and has to convert the message into a series of bites

 	string startDate = 1;
 	string endDate = 2;


 }

 //Client streaming - specify what my message return is called, which type its contains and assigning its values.

 message identifyPeriod{

 //it is the type that are in our message and has to convert the message into a series of bites

     string periodMsg = 1;//It will be start date until end date

 }

  // Unary - specify what my message is called, which type its contains and assigning its values.

  message resourceType{

 //it is the type that are in our message and has to convert the message into a series of bites

  string myResourceType = 1;

 }

  // Unary - specify what my message return is called, which type its contains and assigning its values.

 message registrationTypeResponse{

 //it is the type that are in our message and has to convert the message into a series of bites

   string naturalResourceRegistered = 2;

 }

  //Server streaming - specify what my message is called, which type its contains and assigning its values.

 message reportAirWaterQuality{

 //it is the type that are in our message and has to convert the message into a series of bites

 	string periodMsg = 1;
 	string myResourceType = 2;
 	string qualityReport = 3;

 }


